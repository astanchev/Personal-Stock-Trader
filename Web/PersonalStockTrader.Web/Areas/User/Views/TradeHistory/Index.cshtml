@using System.Globalization
@model PersonalStockTrader.Web.ViewModels.User.TradeHistory.TradeHistoryViewModel
@{
    ViewData["Title"] = "Trade history";
}

<h1 class="font-weight-bold text-center text-dark">@ViewData["Title"]</h1>
<div class="container-fluid text-right float-right">@DateTime.Now.Date.ToString("d", CultureInfo.InvariantCulture)</div>
<div class="content-wrapper">
    <form class="forms-sample">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-3 col-form-label text-right">Username</label>
                    <div class="col-sm-9">
                        <input type="text" class="form-control font-weight-bold text-dark text-center text-dark" value="@Model.Username" readonly="" />
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-3 col-form-label text-right">Email</label>
                    <div class="col-sm-9">
                        <input type="email" class="form-control font-weight-bold text-dark text-center text-dark" value="@Model.Email" readonly="" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-3 col-form-label text-right">Account number</label>
                    <div class="col-sm-9">
                        <input type="number" class="form-control font-weight-bold text-dark text-center text-dark" value="@Model.AccountId" readonly="" />
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-3 col-form-label text-right">Start Balance</label>
                    <div class="col-sm-9">
                        <input type="number" class="form-control font-weight-bold text-dark text-center text-dark" value="@Model.StartBalance.ToString("f2")" readonly="" />
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group row">
                    <label class="col-sm-3 col-form-label text-right">Current Balance</label>
                    <div class="col-sm-9">
                        <input type="number" class="form-control font-weight-bold text-dark text-center text-dark" value="@Model.Balance.ToString("f2")" readonly="" />
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="col-lg-12 grid-margin stretch-card">
    <div class="card">
        <div class="card-body">
            <h2 class="card-title">Closed Positions</h2>
            <div class="card">
                <div class="card-body">
                    <form method="post">
                        Start date: <input id="startDate" type="date" name="startDate" value="2020-01-01" min="2019-01-01" />
                        End date: <input id="endDate" type="date" min="2019-01-01" name="endDate" />
                        <input class="btn btn-inverse-primary" type="submit" value="Get positions" />
                        <button id="generate" type="button" class="btn btn-inverse-danger btn-icon-text float-right" target="_blank" asp-action="GenerateReport">
                            Generate report
                            <i class="mdi mdi-printer btn-icon-append"></i>
                        </button>
                    </form>
                </div>
            </div>

            <div class="table-responsive">
                <table id="positions" class="table table-hover table-striped">
                    <thead class="thead-light">
                        <tr>
                            <th scope="col" class="text-center">Stock</th>
                            <th scope="col" class="text-center">Open Date</th>
                            <th scope="col" class="text-center">Quantity</th>
                            <th scope="col" class="text-center">Direction (Buy/Sell)</th>
                            <th scope="col" class="text-center">Buy/Sell price</th>
                            <th scope="col" class="text-center">Close price</th>
                            <th scope="col" class="text-center">Profit/Loss</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var position in Model.Positions)
                        {
                            <tr>
                                <td class="text-center font-weight-bold">@position.Ticker</td>
                                <td class="text-center font-weight-bold">@position.OpenDate.ToShortDateString()</td>
                                <td class="text-center">@position.Quantity</td>
                                <td class="text-center">@position.Direction</td>
                                <td class="text-center">@position.OpenPrice.ToString("f2")</td>
                                <td class="text-center">@position.ClosePrice.ToString("f2")</td>
                                <td class="text-center font-weight-bold">@position.Profit.ToString("f2")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#positions').DataTable({
                "pagingType": "simple_numbers"
            });
            $('.dataTables_length').addClass('bs-select');
        });
    </script>

    <script>
        var today = new Date().toISOString().split("T")[0];
        document.getElementById("startDate").setAttribute("max", today);
        document.getElementById("endDate").setAttribute("max", today);
        document.getElementById("endDate").value = today;
    </script>
    
    <script>
        document.getElementById("generate").addEventListener('click', (e) => {
            e.preventDefault();

            var startDate = document.getElementById("startDate").value;
            var endDate = document.getElementById("endDate").value;

            window.open('@Url.Action("GenerateReport", "TradeHistory")?startDate=' + startDate + '&endDate=' + endDate, "_blank");
        });
    </script>
}